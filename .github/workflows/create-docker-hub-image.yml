name: Publish Image in Docker Hub

on:
  push:
    branches: [dev, develop, angular-update]
  pull_request:
    branches: [dev, develop]

env:
  REGISTRY: docker.io
  IMAGE_NAME: web-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check Docker Hub secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USER }}" ] || [ -z "${{ secrets.DOCKER_PASSWORD }}" ] || [ -z "${{ secrets.DOCKER_ORGANIZATION }}" ]; then
            echo "⚠️ Docker Hub secrets not configured. Skipping Docker image build."
            echo "Please configure DOCKER_USER, DOCKER_PASSWORD, and DOCKER_ORGANIZATION secrets."
            echo "See DOCKER_HUB_SETUP.md for setup instructions."
            exit 0
          fi
          echo "✅ Docker Hub secrets configured"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_ORGANIZATION }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PUPPETEER_SKIP_DOWNLOAD_ARG=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

name: üê≥ Publish Docker Image to Docker Hub

on:
  push:
<<<<<<< HEAD
    branches: 
      - main
      - dev
      - develop
      - angular-update
  pull_request:
    branches:
      - main
      - dev
=======
    branches: [dev, develop, angular-update]
  pull_request:
    branches: [dev, develop]
>>>>>>> aa2311288830df816c27e17e5a6c25b1a136e287

<<<<<<< HEAD
env:
  DOCKER_ORGANIZATION: ${{ secrets.DOCKER_ORGANIZATION }}
  NODE_VERSION: '22.9.0'

=======
env:
  REGISTRY: docker.io
  IMAGE_NAME: web-app

>>>>>>> aa2311288830df816c27e17e5a6c25b1a136e287
jobs:
  validate:
    runs-on: ubuntu-latest
<<<<<<< HEAD
    outputs:
      should-build: ${{ steps.check-secrets.outputs.has-secrets }}
    steps:
      - name: Check Docker Hub secrets
        id: check-secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USER }}" ] || [ -z "${{ secrets.DOCKER_PASSWORD }}" ] || [ -z "${{ secrets.DOCKER_ORGANIZATION }}" ]; then
            echo "‚ö†Ô∏è Docker Hub secrets not configured. Skipping Docker build."
            echo "Required secrets: DOCKER_USER, DOCKER_PASSWORD, DOCKER_ORGANIZATION"
            echo "has-secrets=false" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Docker Hub secrets configured"
            echo "has-secrets=true" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: validate
    if: needs.validate.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    
=======
>>>>>>> aa2311288830df816c27e17e5a6c25b1a136e287
    steps:
<<<<<<< HEAD
      - name: Checkout code
        uses: actions/checkout@v4
=======
      - name: Checkout repository
        uses: actions/checkout@v4
>>>>>>> aa2311288830df816c27e17e5a6c25b1a136e287

      - name: Check Docker Hub secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USER }}" ] || [ -z "${{ secrets.DOCKER_PASSWORD }}" ] || [ -z "${{ secrets.DOCKER_ORGANIZATION }}" ]; then
            echo "‚ö†Ô∏è Docker Hub secrets not configured. Skipping Docker image build."
            echo "Please configure DOCKER_USER, DOCKER_PASSWORD, and DOCKER_ORGANIZATION secrets."
            echo "See DOCKER_HUB_SETUP.md for setup instructions."
            exit 0
          fi
          echo "‚úÖ Docker Hub secrets configured"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
<<<<<<< HEAD
        uses: docker/setup-buildx-action@v3
        with:
          install: true
=======
        uses: docker/setup-buildx-action@v3
>>>>>>> aa2311288830df816c27e17e5a6c25b1a136e287

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

<<<<<<< HEAD
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_ORGANIZATION }}/web-app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
=======
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_ORGANIZATION }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
>>>>>>> aa2311288830df816c27e17e5a6c25b1a136e287

<<<<<<< HEAD
      - name: Get Git information
        id: git-info
        run: |
          echo "short-hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "long-hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          echo "timestamp=$(date -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
=======
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PUPPETEER_SKIP_DOWNLOAD_ARG=true
          cache-from: type=gha
          cache-to: type=gha,mode=max
>>>>>>> aa2311288830df816c27e17e5a6c25b1a136e287

<<<<<<< HEAD
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PUPPETEER_SKIP_DOWNLOAD_ARG=true
            BUILD_DATE=${{ steps.git-info.outputs.timestamp }}
            VCS_REF=${{ steps.git-info.outputs.short-hash }}
            VERSION=${{ steps.git-info.outputs.branch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        if: github.event_name != 'pull_request'
        run: |
          echo "üê≥ Docker image pushed successfully!"
          echo "Image: ${{ env.DOCKER_ORGANIZATION }}/web-app"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Digest: ${{ steps.build.outputs.digest }}"

=======
>>>>>>> aa2311288830df816c27e17e5a6c25b1a136e287